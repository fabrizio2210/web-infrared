---
sudo: required

env:
  - distribution: debian
    version: stretch

services:
  - docker


language: python

python:
  - "3.5"
# command to install dependencies
before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'
  - cd src
install:
  - pip install -r requirements.txt
# command to run tests
script:
  - python tests/test-app.py
  - cd  ..
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/tmp/my_role:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /tmp/my_role/setup.yml -i /tmp/my_role/travis/inventory.list --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /tmp/my_role/setup.yml -i /tmp/my_role/travis/inventory.list'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /tmp/my_role/setup.yml -i /tmp/my_role/travis/inventory.list
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'
